function solve(input) {
    let obj = {}
    let count = Number(input.shift())
    for (let i = 0; i < count; i++) {
        let [plant, ratity] = input.shift().split('<->')
        ratity = Number(ratity)
        //if (!obj.hasOwnProperty(plant)) {
        obj[plant] = { ratity, rating: [] }
        //} else {
        // obj[plant].ratity = ratity
        //}

    }
    //console.log(obj)

    let commands = input.shift()
    while (commands !== 'Exhibition') {
        let [command, plants] = commands.split(': ')
        let tokens = plants.split(' - ')
        tokens[1] = Number(tokens[1])
        if (obj.hasOwnProperty(tokens[0])) {
            if (command === 'Rate') {
                rate(tokens[0], tokens[1])
            } else if (command === 'Update') {
                update(tokens[0], tokens[1])
            } else if (command === 'Reset') {
                reset(tokens[0])
            } else {
                console.log('error')
            }
        } else {
            console.log('error')
        }

        commands = input.shift()
    }


    function rate(plant, rating) {
        for (let item in obj[plant]) {
            if (item === 'rating') {
                obj[plant][item].push(rating)
            }

        }

    }

    function update(plant, newRatity) {
        if (obj.hasOwnProperty(plant)) {
            obj[plant].ratity = newRatity

        }
    }
    function reset(plant) {
        if (obj.hasOwnProperty(plant)) {
            obj[plant].rating = []
        }
    }

    let sort = Object.entries(obj).sort((a, b) => {
        if (a[1].ratity === b[1].ratity) {
            return b[1].rating - a[1].rating
        } else {
            return b[1].ratity - a[1].ratity
        }
    })

    console.log(`Plants for the exhibition:`)
    sort.forEach(value => {
        let arr = value[1].rating
        let average_rating = 0
        if (arr.length > 0) {
            average_rating = arr.reduce((a, b) => a + b) / arr.length
        }

        console.log(`- ${value[0]}; Rarity: ${value[1].ratity}; Rating: ${average_rating.toFixed(2)}`)
    })

}
